{"version":3,"sources":["webpack/universalModuleDefinition","/Users/chen/Dev/simple-scaffold/scaffold.ts","external \"fs\"","external \"glob\"","external \"handlebars\"","external \"path\"","webpack/bootstrap","webpack/startup"],"names":["root","factory","exports","module","define","amd","global","config","locals","DefaultConfig","name","templates","output","process","cwd","createSubfolder","overwrite","quiet","this","DefaultLocals","Name","toUpperCase","slice","toLowerCase","parseLocals","text","handlebars","compile","noEscape","template","e","warn","fileList","input","checkPath","files","glob","sync","dot","map","g","path","join","idx","indexOf","cleanCheckPath","file","push","base","getFileContents","filePath","log","fs","readFileSync","toString","getOutputPath","basePath","out","basename","outputDir","relativeFilePath","length","writeFile","fileContents","baseDir","dirname","writeDirectory","encoding","err","shouldWriteFile","existsSync","run","fileConf","count","outputPath","contents","outputContents","lstatSync","isDirectory","info","replace","error","Error","parent","mkdirSync","_log","method","fn","console","args","SimpleScaffold","require","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","call"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"library\"] = factory();\n\telse\n\t\troot[\"library\"] = factory();\n})(global, function() {\nreturn ","import * as fs from \"fs\"\nimport * as path from \"path\"\nimport { IScaffold } from \"./index.d\"\nimport * as glob from \"glob\"\nimport * as handlebars from \"handlebars\"\n\nclass SimpleScaffold {\n  public config: IScaffold.Config\n  public locals: IScaffold.Config[\"locals\"] = {} as any\n\n  constructor(config: IScaffold.Config) {\n    const DefaultConfig: IScaffold.Config = {\n      name: \"scaffold\",\n      templates: [],\n      output: process.cwd(),\n      createSubfolder: true,\n      overwrite: true,\n      quiet: false,\n    }\n\n    this.config = { ...DefaultConfig, ...config }\n\n    const DefaultLocals = {\n      // TODO improve\n      Name: this.config.name![0].toUpperCase() + this.config.name!.slice(1),\n      name: this.config.name![0].toLowerCase() + this.config.name!.slice(1),\n    }\n\n    this.locals = { ...DefaultLocals, ...config.locals }\n  }\n\n  private parseLocals(text: string): string {\n    try {\n      const template = handlebars.compile(text, {\n        noEscape: true,\n      })\n      return template(this.locals)\n    } catch (e) {\n      this.warn(\"Problem using Handlebars, returning unmodified content\")\n      return text\n    }\n  }\n\n  private fileList(input: string[]): IScaffold.FileRepr[] {\n    const output: IScaffold.FileRepr[] = []\n    for (const checkPath of input) {\n      const files = glob\n        .sync(checkPath, { dot: true })\n        .map((g) => (g[0] == \"/\" ? g : path.join(process.cwd(), g)))\n      const idx = checkPath.indexOf(\"*\")\n      let cleanCheckPath = checkPath\n      if (idx >= 0) {\n        cleanCheckPath = checkPath.slice(0, idx - 1)\n      }\n      for (const file of files) {\n        output.push({ base: cleanCheckPath, file })\n      }\n    }\n    return output\n  }\n\n  private getFileContents(filePath: string): string {\n    this.log(fs.readFileSync(filePath))\n    return fs.readFileSync(filePath).toString()\n  }\n\n  private getOutputPath(file: string, basePath: string): string {\n    let out: string\n\n    if (typeof this.config.output === \"function\") {\n      out = this.config.output(file, basePath, path.basename(file))\n    } else {\n      const outputDir =\n        this.config.output +\n        (this.config.createSubfolder ? `/${this.config.name}/` : \"/\")\n      const idx = file.indexOf(basePath)\n      let relativeFilePath = file\n      if (idx >= 0) {\n        if (file !== basePath) {\n          relativeFilePath = file.slice(idx + basePath.length + 1)\n        } else {\n          relativeFilePath = path.basename(file)\n        }\n      }\n      out = outputDir + relativeFilePath\n    }\n\n    return this.parseLocals(out)\n  }\n\n  private writeFile(filePath: string, fileContents: string): void {\n    const baseDir = path.dirname(filePath)\n    this.writeDirectory(baseDir, filePath)\n    fs.writeFile(filePath, fileContents, { encoding: \"utf-8\" }, (err) => {\n      if (err) {\n        throw err\n      }\n    })\n  }\n\n  private shouldWriteFile(filePath: string) {\n    const overwrite =\n      typeof this.config.overwrite === \"boolean\"\n        ? this.config.overwrite\n        : this.config.overwrite?.(filePath)\n    const exists = fs.existsSync(filePath)\n\n    return !exists || overwrite !== false\n  }\n\n  public run(): void {\n    this.log(`Generating scaffold: ${this.config.name}...`)\n    const templates = this.fileList(this.config.templates)\n\n    let fileConf,\n      count = 0\n\n    this.log(\"Template files:\", templates)\n    for (fileConf of templates) {\n      let outputPath, contents, outputContents, file, base\n      try {\n        count++\n        file = fileConf.file\n        base = fileConf.base\n        outputPath = this.getOutputPath(file, base)\n        if (fs.lstatSync(file).isDirectory()) {\n          this.writeDirectory(outputPath, file)\n          continue\n        }\n        contents = this.getFileContents(file)\n        outputContents = this.parseLocals(contents)\n        if (this.shouldWriteFile(outputPath)) {\n          this.info(\"Writing:\", {\n            file,\n            base,\n            outputPath,\n            outputContents: outputContents.replace(\"\\n\", \"\\\\n\"),\n          })\n          this.writeFile(outputPath, outputContents)\n        } else {\n          this.log(`Skipping file ${outputPath}`)\n        }\n      } catch (e) {\n        this.error(\"Error while processing file:\", {\n          file,\n          base,\n          contents,\n          outputPath,\n          outputContents,\n        })\n        throw e\n      }\n    }\n\n    if (!count) {\n      throw new Error(\"No files to scaffold!\")\n    }\n\n    this.log(\"Done\")\n  }\n\n  private writeDirectory(outputPath: string, file: any): void {\n    const parent = path.dirname(outputPath)\n    if (!fs.existsSync(parent)) {\n      this.writeDirectory(parent, outputPath)\n    }\n    if (!fs.existsSync(outputPath)) {\n      this.info(\"Creating directory:\", {\n        file,\n        outputPath,\n      })\n      fs.mkdirSync(outputPath)\n    }\n  }\n\n  _log(method: keyof typeof console, ...args: any[]): void {\n    if (this.config.quiet) {\n      return\n    }\n    const fn = console[method] as (...a: any[]) => void\n    fn(...args)\n  }\n\n  log(...args: any[]): void {\n    this._log(\"log\", ...args)\n  }\n  info(...args: any[]): void {\n    this._log(\"info\", ...args)\n  }\n  warn(...args: any[]): void {\n    this._log(\"warn\", ...args)\n  }\n  error(...args: any[]): void {\n    this._log(\"error\", ...args)\n  }\n}\n\nexport default SimpleScaffold\n","module.exports = require(\"fs\");;","module.exports = require(\"glob\");;","module.exports = require(\"handlebars\");;","module.exports = require(\"path\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(493);\n"],"sourceRoot":""}