"use strict";(self.webpackChunksimple_scaffold_docs=self.webpackChunksimple_scaffold_docs||[]).push([[300],{2516:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>r,default:()=>f,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var o=t(1527),s=t(8672);const a={title:"Node.js Usage"},r=void 0,c={id:"usage/node",title:"Node.js Usage",description:"You can build the scaffold yourself, if you want to create more complex arguments, scaffold groups,",source:"@site/docs/usage/04-node.md",sourceDirName:"usage",slug:"/usage/node",permalink:"/simple-scaffold/docs/usage/node",draft:!1,unlisted:!1,editUrl:"https://github.com/chenasraf/simple-scaffold/blob/master/docs/docs/usage/04-node.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Node.js Usage"},sidebar:"docs",previous:{title:"CLI Usage",permalink:"/simple-scaffold/docs/usage/cli"},next:{title:"Examples",permalink:"/simple-scaffold/docs/usage/examples"}},i={},l=[];function d(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"You can build the scaffold yourself, if you want to create more complex arguments, scaffold groups,\netc - simply pass a config object to the Scaffold function when you are ready to start."}),"\n",(0,o.jsxs)(n.p,{children:["The config takes similar arguments to the command line. The full type definitions can be found in\n",(0,o.jsx)(n.a,{href:"https://github.com/chenasraf/simple-scaffold/blob/develop/src/types.ts#L13",children:"src/types.ts"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["See the full\n",(0,o.jsx)(n.a,{href:"https://chenasraf.github.io/simple-scaffold/interfaces/ScaffoldConfig.html",children:"documentation"})," for the\nconfiguration options and their behavior."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"interface ScaffoldConfig {\n  name: string\n  templates: string[]\n  output: FileResponse<string>\n  createSubFolder?: boolean\n  data?: Record<string, any>\n  overwrite?: FileResponse<boolean>\n  quiet?: boolean\n  verbose?: LogLevel\n  dryRun?: boolean\n  helpers?: Record<string, Helper>\n  subFolderNameHelper?: DefaultHelpers | string\n  beforeWrite?(\n    content: Buffer,\n    rawContent: Buffer,\n    outputPath: string,\n  ): string | Buffer | undefined | Promise<string | Buffer | undefined>\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"This is an example of loading a complete scaffold via Node.js:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import Scaffold from "simple-scaffold"\n\nconst config = {\n  name: "component",\n  templates: [path.join(__dirname, "scaffolds", "component")],\n  output: path.join(__dirname, "src", "components"),\n  createSubFolder: true,\n  subFolderNameHelper: "upperCase"\n  data: {\n    property: "value",\n  },\n  helpers: {\n    twice: (text) => [text, text].join(" ")\n  },\n  beforeWrite: (content, rawContent, outputPath) => content.toString().toUpperCase()\n}\n\nconst scaffold = Scaffold(config)\n'})})]})}function f(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8672:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>r});var o=t(959);const s={},a=o.createContext(s);function r(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);